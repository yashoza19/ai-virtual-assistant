# Default values for ai-virtual-agent.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: quay.io/ecosystem-appeng/ai-virtual-agent
  # This sets the pull policy for images.
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  #tag: "1.1.0"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations:
    serviceaccounts.openshift.io/oauth-redirectreference.ai-virtual-agent: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"ai-virtual-agent-authenticated"}}'
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "ai-virtual-agent-proxy-sa"

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8000


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: secret-ai-virtual-agent-tls
    secret:
      defaultMode: 420
      secretName: ai-virtual-agent-tls
  - name: secret-ai-virtual-agent-proxy
    secret:
      defaultMode: 420
      secretName: ai-virtual-agent-proxy
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

pgSecret: pgvector

llama_stack_url: http://llamastack:8321

sessionSecret: {}
 # value: "my-session-secret"

seed:
  admin_user:
    username: kubeadmin
    # email: ""

pgvector:
  extraDatabases:
  - name: ai_virtual_agent
    vectordb: false

minio:
  secret:
    user: minio_rag_user
    password: minio_rag_password
    host: minio
    port: "9000"

    # Upload sample files to the minio bucket
  sampleFileUpload:
    enabled: true
    bucket: documents
    urls:
    - https://raw.githubusercontent.com/burrsutter/sample-pdfs/main/FantaCo/HR/FantaCo-Fabulous-HR-Benefits.pdf

llama-stack:
  auth:
    custom:
      endpoint: http://ai-virtual-agent:8887/validate
    access_policy:
    - permit:
        actions: [create]
        resource: session::*
      description: all users have create access to sessions
    - permit:
        actions: [read]
        resource: agent::*
      description: all users have read access to agents
    - permit:
        actions: [read]
        resource: tool_group::*
      description: all users have read access to tool_groups
    - permit:
        actions: [read]
        resource: model::*
      description: all users have read access to models
    - permit:
        actions: [read]
        resource: vector_db::*
      description: all users have read access to vector_dbs
    - permit:
        actions: [create, update, delete]
        resource: vector_db::*
      when: user with admin in roles
      description: users with the admin role can create, update or delete vector_dbs
    - forbid:
        actions: [create, update, delete]
      unless: user with admin in roles
      description: only users with the admin role can create, update or delete resources
    - permit:
        actions: [read, update, delete]
      when: user is owner
      description: users can read, update and delete resources they own

# global:
#   models:
#     llama-3-1-8b-instruct:
#       id: meta-llama/Llama-3.1-8B-Instruct
#       enabled: true
#       url: http://llama-3-1-8b-instruct-predictor.rag-demo-16.svc.cluster.local:8080/v1

# llama-stack:
#   secrets:
#     TAVILY_SEARCH_API_KEY: "api-key"
#   mcp-servers:
#     mcp-weather:
#       uri: http://rag-mcp-weather:8000/sse
